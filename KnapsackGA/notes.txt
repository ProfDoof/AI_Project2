// THINGS WE NEED
// Crossover method
// Mutation Rate
// Evaluation (FITNESS)
//   Knapsack
//    Highest value
//    Remaining capacity
//    ? Number of items
//    ? Best Ratio
//   TSP
//    Distance
//   Substitution Cipher
//    Unigraph/Digraph/Trigraph/Vowel
// Copy Rate
// Population Rate
// How to handle crowding (I AM A FAN OF CATASTROPHIC MUTATION)

// What we need to ask HOMER
//  How to determine if we are crowding
//    String or Boolean Array
//  How to deal with weight limit OR how to generate initial sets
//  Dealing with crossover for something like knapsack.

// Random function can be done using the mersenne twister combined with random
// device and standard distribution

// population : 100
// elitism : keep x best (x = 20) (this will keep focus on depth (more generations))
// crossover : randomized
// fitnesss : value-based heuristic that also takes weight into account. WEIGHT LEFT

// how to deal with weight limit : initially generate good sets
//                                 if over limit kill

// We may need to create a file that is simply a GA Methods file that way we can declutter our main file.
// Also if we can we should get away from rand. That particular random number generators period is much too
// small and may lead to repeating numbers. Ideally we should be using the random library. They have
// many random number generators that are far better and much closer to being actually random.
